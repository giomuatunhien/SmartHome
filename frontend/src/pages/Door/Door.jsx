import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Door.css';

const Door = ({ setIsLoggedIn, isDoorOn, setIsDoorOn }) => {
  const navigate = useNavigate();
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [showImageModal, setShowImageModal] = useState(false);
  const [selectedImage, setSelectedImage] = useState(null);
  const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);
  const [oldPassword, setOldPassword] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [passwordChangeError, setPasswordChangeError] = useState('');

  // X·ª≠ l√Ω nh·∫≠p m·∫≠t m√£
  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
    setError('');
  };

  // X·ª≠ l√Ω m·ªü c·ª≠a
  const handleOpenDoor = () => {
    if (password === '112233') {
      setIsDoorOn(true);
      setError('');
      alert('C·ª≠a ƒë√£ ƒë∆∞·ª£c m·ªü!');
      navigate('/home');
    } else {
      setError('M·∫≠t m√£ kh√¥ng ƒë√∫ng!');
    }
  };

  // D·ªØ li·ªáu l·ªãch s·ª≠
  const historyData = [
    { name: 'ƒê·∫≠u Ng·ªçc Qu√¢n', id: '#000001', method: 'Nh·∫≠p m·∫≠t m√£', date: '28 Jan, 12:30 AM', status: 'Th√†nh c√¥ng', image: 'https://via.placeholder.com/100' },
    { name: 'Nguyen Van A', id: '#000002', method: 'Face AI', date: '28 Jan, 12:30 AM', status: 'Th·∫•t b·∫°i', image: 'https://via.placeholder.com/100' },
    { name: 'Nguyen Van B', id: '#000003', method: 'Nh·∫≠p m·∫≠t m√£', date: '28 Jan, 12:30 AM', status: 'Th·∫•t b·∫°i', image: 'https://via.placeholder.com/100' },
    { name: 'Nguyen Van C', id: '#000004', method: 'Face AI', date: '28 Jan, 12:30 AM', status: 'Th√†nh c√¥ng', image: 'https://via.placeholder.com/100' },
  ];

  // Hi·ªÉn th·ªã modal ·∫£nh
  const handleViewImage = (image) => {
    setSelectedImage(image);
    setShowImageModal(true);
  };

  // ƒê√≥ng modal ·∫£nh
  const closeImageModal = () => {
    setShowImageModal(false);
    setSelectedImage(null);
  };

  // X·ª≠ l√Ω Face AI (c·∫≠p nh·∫≠t khu√¥n m·∫∑t)
  const handleFaceAI = () => {
    alert('Ch·ª©c nƒÉng Face AI: Y√™u c·∫ßu ch·ª•p ·∫£nh t·ª´ thi·∫øt b·ªã (ch∆∞a tri·ªÉn khai).');
    // Sau n√†y c√≥ th·ªÉ d√πng navigator.mediaDevices.getUserMedia ƒë·ªÉ ch·ª•p ·∫£nh
  };

  // X·ª≠ l√Ω ƒë·ªïi m·∫≠t kh·∫©u
  const handleChangePassword = () => {
    if (oldPassword !== '112233') {
      setPasswordChangeError('M·∫≠t kh·∫©u c≈© kh√¥ng ƒë√∫ng!');
      return;
    }
    if (newPassword !== confirmPassword) {
      setPasswordChangeError('M·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n m·∫≠t kh·∫©u kh√¥ng kh·ªõp!');
      return;
    }
    if (newPassword.length < 6) {
      setPasswordChangeError('M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!');
      return;
    }
    setPasswordChangeError('');
    alert('ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!');
    setOldPassword('');
    setNewPassword('');
    setConfirmPassword('');
    setShowChangePasswordModal(false);
  };

  // ƒê√≥ng modal ƒë·ªïi m·∫≠t kh·∫©u
  const closeChangePasswordModal = () => {
    setShowChangePasswordModal(false);
    setOldPassword('');
    setNewPassword('');
    setConfirmPassword('');
    setPasswordChangeError('');
  };

  return (
    <main className="main-content">
      <header className="main-header">
        <h1>Smart Door Control</h1>
        <div className="search-bar">
          <input type="text" placeholder="Search for something" />
        </div>
        <div className="header-icons">
          <span role="img" aria-label="settings">‚öôÔ∏è</span>
          <span role="img" aria-label="notifications">üîî</span>
        </div>
      </header>

      <section className="door-control-section">
        {/* Door Control Form */}
        <div className="door-control-form">
          <div className="door-status">
            <span>{isDoorOn ? 'M·ªü c·ª≠a' : 'ƒê√≥ng c·ª≠a'}</span>
            <span role="img" aria-label="door-status">{isDoorOn ? 'üîì' : 'üîí'}</span>
          </div>
          <div className="password-input">
            <label>Nh·∫≠p m·∫≠t m√£</label>
            <input
              type="password"
              value={password}
              onChange={handlePasswordChange}
              placeholder="******"
            />
            {error && <span className="error">{error}</span>}
          </div>
          <button onClick={handleOpenDoor} className="open-door-btn">
            M·ªü c·ª≠a
          </button>
          <button onClick={handleFaceAI} className="face-ai-btn">
            Face AI
          </button>
          <button onClick={() => setShowChangePasswordModal(true)} className="change-password-btn">
            ƒê·ªïi m·∫≠t kh·∫©u
          </button>
        </div>

        {/* History Section */}
        <div className="history-section">
          <h2>L·ªãch s·ª≠ m·ªü c·ª≠a</h2>
          <div className="history-status">
            <span>T·∫Øt</span>
          </div>
          <table className="history-table">
            <thead>
              <tr>
                <th>Ng∆∞·ªùi m·ªü c·ª≠a</th>
                <th>ID ng∆∞·ªùi m·ªü</th>
                <th>Ki·ªÉu</th>
                <th>Ng√†y</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Xem l·∫°i</th>
              </tr>
            </thead>
            <tbody>
              {historyData.map((item, index) => (
                <tr key={index}>
                  <td>{item.name}</td>
                  <td>{item.id}</td>
                  <td>{item.method}</td>
                  <td>{item.date}</td>
                  <td>{item.status}</td>
                  <td>
                    <span
                      role="img"
                      aria-label="view"
                      className="view-icon"
                      onClick={() => handleViewImage(item.image)}
                    >
                      üì∑
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
          <div className="pagination">
            <button>Previous</button>
            <span>1</span>
            <span>2</span>
            <span>3</span>
            <span>4</span>
            <button>Next</button>
          </div>
        </div>
      </section>

      {/* Modal hi·ªÉn th·ªã ·∫£nh */}
      {showImageModal && (
        <div className="modal-overlay">
          <div className="image-modal">
            <img src={selectedImage} alt="Person" className="modal-image" />
            <button className="close-modal-btn" onClick={closeImageModal}>
              ‚úï
            </button>
          </div>
        </div>
      )}

      {/* Modal ƒë·ªïi m·∫≠t kh·∫©u */}
      {showChangePasswordModal && (
        <div className="modal-overlay">
          <div className="change-password-modal">
            <h2>ƒê·ªïi m·∫≠t kh·∫©u</h2>
            <div className="password-fields">
              <label>M·∫≠t kh·∫©u c≈©</label>
              <input
                type="password"
                value={oldPassword}
                onChange={(e) => setOldPassword(e.target.value)}
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u c≈©"
              />
              <label>M·∫≠t kh·∫©u m·ªõi</label>
              <input
                type="password"
                value={newPassword}
                onChange={(e) => setNewPassword(e.target.value)}
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi"
              />
              <label>X√°c nh·∫≠n m·∫≠t kh·∫©u</label>
              <input
                type="password"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
                placeholder="X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi"
              />
              {passwordChangeError && <span className="error">{passwordChangeError}</span>}
            </div>
            <div className="face-ai-option">
              <label>C·∫≠p nh·∫≠t khu√¥n m·∫∑t</label>
              <button onClick={handleFaceAI} className="update-face-btn">
                C·∫≠p nh·∫≠t khu√¥n m·∫∑t
              </button>
            </div>
            <div className="modal-buttons">
              <button onClick={handleChangePassword} className="save-password-btn">
                L∆∞u
              </button>
              <button onClick={closeChangePasswordModal} className="cancel-password-btn">
                H·ªßy
              </button>
            </div>
          </div>
        </div>
      )}
    </main>
  );
};

export default Door;