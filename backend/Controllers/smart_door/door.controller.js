const Door = require('../../models/smart_door.model');
const DoorHistory = require('../../models/smart_door_history');
const DoorData = require('../../models/smart_door_data.model');
const MQTT = require('../../services/doorService')

const setDoorPassword = async (req, res) => {
  try {
    const { password } = req.body;
    if (!password) {
      return res.status(400).json({ message: 'Vui l√≤ng cung c·∫•p m·∫≠t kh·∫©u.' });
    }

    let door = await Door.findOne();
    if (door) {
      return res.status(400).json({ message: 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t. Vui l√≤ng s·ª≠ d·ª•ng ch·ª©c nƒÉng thay ƒë·ªïi m·∫≠t kh·∫©u.' });
    } else {
      door = new Door({ password, status: 'locked' });
      await door.save();
      return res.status(200).json({ message: 'ƒê·∫∑t m·∫≠t kh·∫©u th√†nh c√¥ng!', door });
    }
  } catch (error) {
    return res.status(500).json({ message: 'L·ªói khi ƒë·∫∑t m·∫≠t kh·∫©u cho c·ª≠a.', error: error.message });
  }
};

const changeDoorPassword = async (req, res) => {
  try {
    const { currentPassword, newPassword } = req.body;
    if (!currentPassword || !newPassword) {
      return res.status(400).json({ message: 'Vui l√≤ng cung c·∫•p m·∫≠t kh·∫©u hi·ªán t·∫°i v√† m·∫≠t kh·∫©u m·ªõi.' });
    }

    let door = await Door.findOne();
    if (!door) {
      return res.status(404).json({ message: 'C·ª≠a ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p. Vui l√≤ng ƒë·∫∑t m·∫≠t kh·∫©u tr∆∞·ªõc.' });
    }

    if (door.password !== currentPassword) {
      return res.status(400).json({ message: 'M·∫≠t kh·∫©u hi·ªán t·∫°i kh√¥ng ƒë√∫ng.' });
    }

    door.password = newPassword;
    door.status = 'locked';
    await door.save();

    res.status(200).json({ message: 'Thay ƒë·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!', door });
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi thay ƒë·ªïi m·∫≠t kh·∫©u cho c·ª≠a.', error: error.message });
  }
};


const accessDoor = async (req, res) => {
  try {
    const { password } = req.body;
    if (!password) {
      return res.status(400).json({ message: 'Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u.' });
    }

    const door = await Door.findOne();
    if (!door) {
      return res.status(404).json({ message: 'C·ª≠a ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p m·∫≠t kh·∫©u.' });
    }


    if (door.password === password) {
      door.status = 'unlocked';
      door.lastAccessedAt = new Date();
      await door.save();

      // const doorHistory = new DoorHistory({
      //   door: door._id,
      //   action: 'open',
      //   notes: 'M·∫≠t kh·∫©u ƒë√∫ng, c·ª≠a ƒë∆∞·ª£c m·ªü.'
      // });
      // await doorHistory.save();
      MQTT.sendDoorStatus(1)
      res.status(200).json({ message: 'C·ª≠a ƒë√£ m·ªü!', door });
    } else {
      const doorHistory = new DoorHistory({
        door: door._id,
        action: 'failed',
        notes: 'M·∫≠t kh·∫©u kh√¥ng ƒë√∫ng.'
      });
      await doorHistory.save();
      res.status(401).json({ message: 'M·∫≠t kh·∫©u kh√¥ng ƒë√∫ng.' });
    }
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi truy c·∫≠p c·ª≠a.', error: error.message });
  }
};

const closeDoor = async (req, res) => {
  try {
    let updatedDoor = await Door.findOne();

    if (!updatedDoor) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y c·ª≠a!" });
    }

    if (updatedDoor.status === 'locked') {
      return res.status(400).json({ message: "C·ª≠a ƒë√£ ƒë√≥ng r·ªìi!" });
    }

    updatedDoor.status = 'locked';
    await updatedDoor.save();

    // G·ª≠i t√≠n hi·ªáu ƒë√≥ng c·ª≠a ƒë·∫øn MQTT (n·∫øu c√≥)
    MQTT.sendDoorStatus(0);
    console.log("üîí C·ª≠a ƒë√£ t·ª± ƒë·ªông ƒë√≥ng.");

    res.status(200).json({ message: "C·ª≠a ƒë√£ ƒë√≥ng th√†nh c√¥ng!" });
  } catch (error) {
    console.error("L·ªói ƒë√≥ng c·ª≠a:", error);
    res.status(500).json({ message: "L·ªói server khi ƒë√≥ng c·ª≠a!", error: error.message });
  }
};


// const getdoorData = async (value) => {
//   try {
//     let status;
//     if (value === '1') {
//       status = true;
//     } else if (value === '0') {
//       status = false;
//     } else {
//       throw new Error(`Gi√° tr·ªã kh√¥ng h·ª£p l·ªá: ${value}. Ch·ªâ ch·∫•p nh·∫≠n '1' ho·∫∑c '0'.`);
//     }
//     const newRecord = new DoorData({ status });
//     await newRecord.save();

//     console.log('ƒê√£ l∆∞u tr·∫°ng th√°i c·ª≠a:', newRecord);
//   } catch (error) {
//     console.error('L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i c·ª≠a:', error);
//   }
// };

const getDoorStatus = async (req, res) => {
  try {
    const door = await Door.findOne();
    if (!door) {
      return res.status(404).json({ message: 'C·ª≠a ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p.' });
    }

    res.status(200).json({ data: door.status }); // Tr·∫£ v·ªÅ 'locked' ho·∫∑c 'unlocked'
  } catch (error) {
    res.status(500).json({ message: 'L·ªói khi l·∫•y tr·∫°ng th√°i c·ª≠a.', error: error.message });
  }
};

module.exports = {
  setDoorPassword,
  accessDoor,
  changeDoorPassword,
  //getdoorData,
  closeDoor,
  getDoorStatus
};
